"""remove spotify artists columns

Revision ID: 0ab1b827499b
Revises: 676d91e955eb
Create Date: 2023-12-19 15:27:44.550327

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0ab1b827499b'
down_revision: Union[str, None] = '676d91e955eb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('spotify_artists', 'death_date')
    op.drop_column('spotify_artists', 'primary_genre')
    op.drop_column('spotify_artists', 'gender_source')
    op.drop_column('spotify_artists', 'is_israeli')
    op.drop_column('spotify_artists', 'is_lgbtq')
    op.drop_column('spotify_artists', 'gender')
    op.drop_column('spotify_artists', 'birth_date')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('spotify_artists', sa.Column('birth_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('spotify_artists', sa.Column('gender', postgresql.ENUM('MALE', 'FEMALE', 'BAND', 'UNKNOWN', name='gender'), autoincrement=False, nullable=True))
    op.add_column('spotify_artists', sa.Column('is_lgbtq', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('spotify_artists', sa.Column('is_israeli', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('spotify_artists', sa.Column('gender_source', postgresql.ENUM('MANUAL_TAGGING', 'OPENAI', 'ISRAELI_WIKIPEDIA', 'GENERAL_WIKIPEDIA', 'SPOTIFY_EQUAL_PLAYLISTS', 'GOOGLE_IMAGES', 'SHAZAM', 'MUSIXMATCH', 'GENIUS', 'SPOTIFY_IMAGES', name='datasource'), autoincrement=False, nullable=True))
    op.add_column('spotify_artists', sa.Column('primary_genre', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('spotify_artists', sa.Column('death_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    # ### end Alembic commands ###
